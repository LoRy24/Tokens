import java.text.SimpleDateFormat

apply plugin: 'java'
group = 'net.thirdshift'
 
println """
==========================================================================
You are building the Tokens plugin https://github.com/TheCoolestPaul/Tokens
  Version:    ${project.version} 
  Build time: ${getCurrentTimestamp()}

Output files are located in [project]/build/libs/Tokens-${project.version}.jar
==========================================================================
"""


sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url "https://papermc.io/repo/repository/maven-public/" }
    maven {
        name = 'placeholderapi-repo'
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = "Jitpack-io"
        url = "https://jitpack.io"
    }
    maven {
        name = "codeMC repo"
        url = "https://repo.codemc.io/repository/maven-public/"
    }
    maven {
        name = "factions repo"
        url = "https://ci.ender.zone/plugin/repository/everything/"
    }
}

dependencies {
    compileOnly ( "com.destroystokyo.paper:paper-api:$paperMCVersion" )
    implementation group: 'org.jetbrains', name: 'annotations', version: '21.0.1'
    implementation ("com.github.MilkBowl:VaultAPI:$vaultVersion") {
        transitive = false
    }
    implementation ("me.clip:placeholderapi:$placeholderVersion") {
        transitive = false
    }
    implementation ("com.github.mcMMO-Dev:mcMMO:$mcmmoVersion") {
        transitive = false
    }
    implementation "com.SirBlobman.combatlogx:CombatLogX-API:$combatlogxVersion"
    implementation ("com.massivecraft:Factions:$factionsVersion") {
        transitive = false
    }
    implementation ("com.github.brcdev-minecraft:shopgui-api:$shopguiplusVersion") {
        transitive = false
    }
    implementation ("com.github.Picono435:PicoJobs:$picoJobsVersion"){
        transitive = false
    }
    implementation ("com.github.okx-code:Rankup3:$rankUpVersion") {
        transitive = false
    }
    implementation ("com.github.Blackixx:BossShopPro:$bossShopProVersion") {
        transitive = false
    }

    testImplementation ("junit:junit:4.13") {

    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    from(sourceSets.main.resources.srcDirs) {
        expand 'version': project.version
        include 'plugin.yml'
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'plugin.yml'
    }
}

static def getCurrentTimestamp() {
  SimpleDateFormat df = new SimpleDateFormat ("HH:mm:ss MM-dd-yyyy")
  return df.format (new Date())
}
